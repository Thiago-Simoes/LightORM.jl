var documenterSearchIndex = {"docs":
[{"location":"manual/start/#Quickstart","page":"Quickstart","title":"Quickstart","text":"","category":"section"},{"location":"manual/start/#How-to-config-ORM.jl","page":"Quickstart","title":"How to config ORM.jl","text":"","category":"section"},{"location":"manual/start/#Database-connection","page":"Quickstart","title":"Database connection","text":"","category":"section"},{"location":"manual/start/","page":"Quickstart","title":"Quickstart","text":"First you need configure database connection, just need to create a .env file in the root folder.  ","category":"page"},{"location":"manual/start/","page":"Quickstart","title":"Quickstart","text":"Containing:","category":"page"},{"location":"manual/start/","page":"Quickstart","title":"Quickstart","text":"DB_HOST=localhost\nDB_USER=root\nDB_PASSWORD=pass\nDB_NAME=dbname\nDB_PORT=3306","category":"page"},{"location":"manual/start/#How-to-create-a-Model","page":"Quickstart","title":"How to create a Model","text":"","category":"section"},{"location":"manual/start/","page":"Quickstart","title":"Quickstart","text":"using ORM\n\n@Model User (\n    (\"id\", \"INTEGER\", [@PrimaryKey(), @AutoIncrement()]),\n    (\"name\", \"TEXT\", [@NotNull()]),\n    (\"email\", \"TEXT\", [@Unique(), @NotNull()]),\n    (\"cpf\", \"VARCHAR(11)\", [@Unique(), @NotNull()]),\n    (\"age\", \"INTEGER\", [])\n)","category":"page"},{"location":"manual/start/#Inserting-data","page":"Quickstart","title":"Inserting data","text":"","category":"section"},{"location":"manual/start/","page":"Quickstart","title":"Quickstart","text":"The data should be formatted as a Dict.   Only @NotNull fields must be provided.   The return can be either an error or a Model Object (a User object in this example).","category":"page"},{"location":"manual/start/","page":"Quickstart","title":"Quickstart","text":"userData = Dict(\"name\" => \"Thiago\", \"email\" => \"thiago@example.com\", \"cpf\" => \"00000000000\")\nuser = create(User, userData)","category":"page"},{"location":"manual/start/#Search-data","page":"Quickstart","title":"Search data","text":"","category":"section"},{"location":"manual/start/","page":"Quickstart","title":"Quickstart","text":"foundUser = findFirst(User; filter=\"name = 'Thiago'\")","category":"page"},{"location":"manual/start/#Update-data","page":"Quickstart","title":"Update data","text":"","category":"section"},{"location":"manual/start/","page":"Quickstart","title":"Quickstart","text":"updatedUser = update(User, \"id = $(user.id)\", Dict(\"name\" => \"Thiago Updated\"))","category":"page"},{"location":"manual/start/#Upsert-data","page":"Quickstart","title":"Upsert data","text":"","category":"section"},{"location":"manual/start/","page":"Quickstart","title":"Quickstart","text":"upsertUser = upsert(User, \"email\", \"thiago@example.com\",\n                    Dict(\"name\" => \"Thiago Upserted\", \"email\" => \"thiago@example.com\"))","category":"page"},{"location":"manual/start/#Update-by-instance","page":"Quickstart","title":"Update by instance","text":"","category":"section"},{"location":"manual/start/","page":"Quickstart","title":"Quickstart","text":"foundUser.name = \"Thiago Instance\"\nupdatedInstance = update(foundUser)","category":"page"},{"location":"manual/start/#Delete-data","page":"Quickstart","title":"Delete data","text":"","category":"section"},{"location":"manual/start/","page":"Quickstart","title":"Quickstart","text":"deleteResult = delete(foundUser)","category":"page"},{"location":"manual/start/#Insert-multiple-records","page":"Quickstart","title":"Insert multiple records","text":"","category":"section"},{"location":"manual/start/","page":"Quickstart","title":"Quickstart","text":"records = [\n    Dict(\"name\" => \"Bob\", \"email\" => \"bob@example.com\", \"cpf\" => \"11111111111\"),\n    Dict(\"name\" => \"Carol\", \"email\" => \"carol@example.com\", \"cpf\" => \"22222222222\")\n]\ncreatedRecords = createMany(User, records)","category":"page"},{"location":"manual/start/#Find-multiple-records","page":"Quickstart","title":"Find multiple records","text":"","category":"section"},{"location":"manual/start/","page":"Quickstart","title":"Quickstart","text":"manyUsers = findMany(User)","category":"page"},{"location":"manual/start/#Update-many","page":"Quickstart","title":"Update many","text":"","category":"section"},{"location":"manual/start/","page":"Quickstart","title":"Quickstart","text":"updatedMany = updateMany(User, \"name LIKE 'Bob%'\", Dict(\"name\" => \"Bob Updated\"))","category":"page"},{"location":"manual/start/#Filter","page":"Quickstart","title":"Filter","text":"","category":"section"},{"location":"manual/start/","page":"Quickstart","title":"Quickstart","text":"_ = createMany(User, [\n    Dict(\"name\" => \"Dan\", \"email\" => \"dan@example.com\", \"cpf\" => \"33333333333\"),\n    Dict(\"name\" => \"Eve\", \"email\" => \"eve@example.com\", \"cpf\" => \"44444444444\")\n])\nfilteredUsers = filter(User; name=\"Dan\")","category":"page"},{"location":"manual/start/#Delete-multiple-records","page":"Quickstart","title":"Delete multiple records","text":"","category":"section"},{"location":"manual/start/","page":"Quickstart","title":"Quickstart","text":"deleteManyResult = deleteMany(User, \"1=1\")","category":"page"},{"location":"Reference/API/#API","page":"API","title":"API","text":"","category":"section"},{"location":"Reference/API/","page":"API","title":"API","text":"Modules = [ORM]","category":"page"},{"location":"Reference/API/#ORM.@Model-Tuple{Any, Any}","page":"API","title":"ORM.@Model","text":"    macro Model(modelName, colsExpr)\n\n# Arguments\n- `modelName`: name of the model\n- `colsExpr`: tuple of tuples with column definitions\n\n# Return with explanation\nGenerates a struct definition and a registration block for the model.\n\n# Example\njulia> @Model User (\n    (\"id\", NUMBER, PrimaryKey(), AutoIncrement()),\n    (\"name\", VARCHAR(255), NotNull()),\n    (\"email\", VARCHAR(255), NotNull(), Unique())\n)\n\n# Output\nBase.@kwdef mutable struct User\n    id::Int\n    name::String\n    email::String\nend\n\n\n\n\n\n","category":"macro"},{"location":"#ORM.jl","page":"Home","title":"ORM.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Easy ORM for Julia.","category":"page"},{"location":"#Package-Features","page":"Home","title":"Package Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Models: conversion, instantiation;\nCRUD functions;\nDatabase connection using .env file;\nMySQL Support.","category":"page"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
